{"version":3,"sources":["logo.svg","components/function/function.component.jsx","components/trainee/trainee.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","FilteredWeights","props","newWeights","totalWeight","searchField","newWeightsDict","key","push","name","weight","numbers","slice","weightsWithoutBar","a","plateNums","Math","floor","b","className","total","toFixed","FilteredWeightsResult","weights","map","Trainee","plate_left","plate_right","i","class_name","reverse","App","state","value","this","formatLabel","step","maxValue","minValue","onChange","setState","src","logo","alt","href","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e595e23a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\n// import { Barbell } from '../barbell/barbell.component';\n\nimport './function.styles.css';\n\nexport const FilteredWeights = (props) => {\n  // console.log(props['newWeightsDict'])\n\n\n  // var newWeightsDict = newWeightsDict\n  var newWeights = [];\n  var totalWeight = 0;\n  var searchField = props.searchField;\n  var newWeightsDict = props.newWeightsDict\n  // console.log(props)\n\n\n\n\n\n\n\n\n  if (searchField < 45){\n    newWeights.push({ name: '45 LBs Bar', weight: 45, numbers: 0 })\n\n\n    // for (var key in newWeightsDict['weights'].slice(1)){\n\n  // while (totalWeight <= 0){\n      for (var key in newWeightsDict['weights'].slice(1)){\n\n        var weightsWithoutBar = newWeightsDict['weights'].slice(1)[key].weight\n        var a = searchField/ weightsWithoutBar\n        var plateNums = (newWeightsDict['weights'].slice(1)[key])\n        plateNums['numbers'] = Math.floor(a)\n        var b = searchField % weightsWithoutBar\n\n        searchField = b\n\n        totalWeight += Math.floor(a)*weightsWithoutBar\n        // console.log(totalWeight)\n\n        newWeights.push(plateNums)\n\n      }\n\n    newWeightsDict['searchField'] = props.searchField\n    newWeightsDict['weights'] = newWeights\n    newWeightsDict['total'] = totalWeight\n\n  } else {\n    newWeights.push({ name: '45 LBs Bar', weight: 45, numbers: 1 })\n    searchField = searchField - 45\n\n\n      for (key in newWeightsDict['weights'].slice(1)){\n        weightsWithoutBar = newWeightsDict['weights'].slice(1)[key].weight*2\n        a = searchField/ weightsWithoutBar\n        plateNums = (newWeightsDict['weights'].slice(1)[key])\n        plateNums['numbers'] = Math.floor(a)*2\n        b = searchField % weightsWithoutBar\n\n        searchField = b\n\n        totalWeight += Math.floor(a)*weightsWithoutBar\n        // if(plateNums['numbers'] != 0){\n        //   newWeights.push(plateNums)\n        // }\n\n        newWeights.push(plateNums)\n\n\n      }\n\n\n\n\n    newWeightsDict['searchField'] = props.searchField\n    newWeightsDict['weights'] = newWeights\n    newWeightsDict['total'] = totalWeight + 45\n\n    // console.log(props)\n\n\n\n  }\n\n\n\n  // return(newWeightsDict['weights']);\n\n\n  return (\n\n    <div>\n\n        <div className = \"total_result\">\n\n          <table className = \"result_table\">\n            <tbody>\n              <tr>\n                <th>Pound</th>\n                <th></th>\n                <th>Kilogram</th>\n              </tr>\n              <tr>\n                <td className = \"total_num\">{newWeightsDict.total} LB</td>\n                <td> = </td>\n                <td className = \"total_num\"> {(newWeightsDict.total * 0.453592).toFixed(2)} KG</td>\n              </tr>\n            </tbody>\n\n          </table>\n\n        </div>\n    </div>\n  )\n\n\n\n}\nexport const FilteredWeightsResult = ({newWeightsDict}) =>(\n    <div>\n\n        <br/>\n        <h3>~Weights Detail~</h3>\n        <div className = \"plates_detail\">\n          <table className = \"plates_table\">\n            <tbody>\n            {newWeightsDict.weights.map(weight=> (\n              <tr key = {`'tr' + ${weight.name}`}>\n                <th key = {weight.name}>{weight.name} </th>\n                <td>Ã—</td>\n                <td> {weight.numbers}</td>\n              </tr>\n\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n\n\n\n    </div>)\n    // <p>{console.log(newWeightsDict.weights[0])}</p>\n    // <p>{console.log(newWeightsDict.weights.name)}</p>\n\n\n\n\n","import React from 'react';\n// import { render } from 'react-dom';\n// import { FilteredWeights } from '../function/function.component';\n\nimport './trainee.styles.css';\n\nexport const Trainee = props => {\n\n    var newWeightsDict = props.newWeightsDict.weights\n    var plate_left = [];\n    var plate_right = [];\n\n    return(\n\n    <div className='trainee_barbell'>\n        {newWeightsDict.map(weight => {\n            if (weight.numbers > 0){\n               for (var i = 1; i <= (weight.numbers)/2; i++) {\n                    plate_left.push(<div key = {i + weight.class_name}  className={`plate_trainee ${weight.class_name}`}></div>)\n                }\n            }\n       }\n        )}\n\n        {plate_left.reverse()}\n\n        <div className=\"stoper\"></div>\n        <div className=\"dot_parents\">\n            <div className = 'dot'></div>\n        </div>\n        <div className=\"between_plates_trainee\"></div>\n        <div className=\"stoper\"></div>\n\n\n        {newWeightsDict.map(weight=> {\n            if (weight.numbers !== 0){\n               for (var i = 0; i < (weight.numbers)/2; i++) {\n                 plate_right.push(<div key = {i + weight.class_name}  className={`plate_trainee ${weight.class_name}`}></div>)\n               }\n            }\n            return\n        })}\n        {plate_right.slice(1)}\n    </div>\n)};\n\n","import React, {Component} from 'react';\n// import {WeightList} from './components/weight-list/weight-list.component'\nimport {FilteredWeights} from './components/function/function.component'\nimport {FilteredWeightsResult} from './components/function/function.component'\n// import ReactDOM from 'react-dom';\nimport InputRange from 'react-input-range';\n// import {Card} from './components/card/card.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nimport {Barbell} from './components/barbell/barbell.component'\nimport {Trainee} from './components/trainee/trainee.component'\n\nimport logo from './logo.svg';\nimport './App.css';\nimport 'react-input-range/lib/css/index.css'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: 225 ,\n      searchField: 225,\n      weights: [\n        {\n          name: '45 LBs Bar',\n          weight: 45,\n          numbers: 1,\n          class_name: 'bar'\n        },\n        {\n          name: '45 LBs Plate',\n          weight: 45,\n          numbers: 4,\n          class_name: 'plate_45'\n        },\n        {\n          name: '35 LBs Plate',\n          weight: 35,\n          numbers: 0,\n          class_name: 'plate_35'\n        },\n        {\n          name: '25 LBs Plate',\n          weight: 25,\n          numbers: 0,\n          class_name: 'plate_25'\n        },\n        {\n          name: '10 LBs Plate',\n          weight: 10,\n          numbers: 0,\n          class_name: 'plate_10'\n        },\n        {\n          name: '5 LBs Plate',\n          weight: 5,\n          numbers: 0,\n          class_name: 'plate_5'\n        },\n        {\n          name: '2.5 LBs Plate',\n          weight: 2.5,\n          numbers: 0,\n          class_name: 'plate_2_5'\n        }\n        // {\n        //   name: '1.25 LBs Plate',\n        //   weight: 1.25,\n        //   numbers: 0\n        // }\n      ],\n      total:225\n    };\n  }\n\n\n  render(){\n    // const { plates, searchField } = this.state;\n    // const filteredPlates = {FilteredWeights}\n    // //   )\n\n\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n        <h2>Do you even lift?</h2>\n        <h4 className = \"sub_title\">Convert Pound to Weight Lifting Plates</h4>\n\n\n\n        <FilteredWeights\n            searchField = {this.state.value}\n            newWeightsDict = {this.state}\n          />\n\n\n          <div className=\"form\">\n\n            <InputRange\n              className = \"InputRange\"\n              formatLabel={value => `${value}LBs`}\n              step={5}\n              maxValue={1000}\n              minValue={45}\n              value={this.state.value}\n              onChange={value => this.setState({ value })}\n            />\n\n\n          </div>\n          <Trainee newWeightsDict = {this.state}/>\n\n\n\n\n\n          <FilteredWeightsResult newWeightsDict = {this.state}/>\n\n\n\n\n        </header>\n        <br/>\n          <footer>\n\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>Created by: Atsushi Hosaka with ReactJS</p>\n            <p>Contact information: <a href=\"https://github.com/ahosaka\">\n            https://github.com/ahosaka</a>.</p>\n          </footer>\n\n\n      </div>\n\n    );\n  }\n}\n\n\n\n\nexport default App;\n\n\n\n            // <SearchBox\n            //   placeholder = 'Type Your Max'\n            //   handleChange = {e =>this.setState({ value: e.target.value},() => console.log(this.state.weights))}\n            //   changingValue = {this.state.value}\n            //   />\n\n\n\n            // <WeightList weights = {FilteredWeights}>\n            // </WeightList>\n\n// export default HorizontalCustomLabels\n\n\n\n          // <Barbell newWeightsDict = {this.state}/>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}